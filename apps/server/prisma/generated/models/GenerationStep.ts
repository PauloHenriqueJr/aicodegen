
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `GenerationStep` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model GenerationStep
 * 
 */
export type GenerationStepModel = runtime.Types.Result.DefaultSelection<Prisma.$GenerationStepPayload>

export type AggregateGenerationStep = {
  _count: GenerationStepCountAggregateOutputType | null
  _avg: GenerationStepAvgAggregateOutputType | null
  _sum: GenerationStepSumAggregateOutputType | null
  _min: GenerationStepMinAggregateOutputType | null
  _max: GenerationStepMaxAggregateOutputType | null
}

export type GenerationStepAvgAggregateOutputType = {
  progress: number | null
  order: number | null
}

export type GenerationStepSumAggregateOutputType = {
  progress: number | null
  order: number | null
}

export type GenerationStepMinAggregateOutputType = {
  id: string | null
  generationId: string | null
  name: string | null
  description: string | null
  type: $Enums.StepType | null
  status: $Enums.StepStatus | null
  progress: number | null
  order: number | null
  startedAt: Date | null
  completedAt: Date | null
  errorMsg: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type GenerationStepMaxAggregateOutputType = {
  id: string | null
  generationId: string | null
  name: string | null
  description: string | null
  type: $Enums.StepType | null
  status: $Enums.StepStatus | null
  progress: number | null
  order: number | null
  startedAt: Date | null
  completedAt: Date | null
  errorMsg: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type GenerationStepCountAggregateOutputType = {
  id: number
  generationId: number
  name: number
  description: number
  type: number
  status: number
  progress: number
  order: number
  startedAt: number
  completedAt: number
  errorMsg: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type GenerationStepAvgAggregateInputType = {
  progress?: true
  order?: true
}

export type GenerationStepSumAggregateInputType = {
  progress?: true
  order?: true
}

export type GenerationStepMinAggregateInputType = {
  id?: true
  generationId?: true
  name?: true
  description?: true
  type?: true
  status?: true
  progress?: true
  order?: true
  startedAt?: true
  completedAt?: true
  errorMsg?: true
  createdAt?: true
  updatedAt?: true
}

export type GenerationStepMaxAggregateInputType = {
  id?: true
  generationId?: true
  name?: true
  description?: true
  type?: true
  status?: true
  progress?: true
  order?: true
  startedAt?: true
  completedAt?: true
  errorMsg?: true
  createdAt?: true
  updatedAt?: true
}

export type GenerationStepCountAggregateInputType = {
  id?: true
  generationId?: true
  name?: true
  description?: true
  type?: true
  status?: true
  progress?: true
  order?: true
  startedAt?: true
  completedAt?: true
  errorMsg?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type GenerationStepAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which GenerationStep to aggregate.
   */
  where?: Prisma.GenerationStepWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of GenerationSteps to fetch.
   */
  orderBy?: Prisma.GenerationStepOrderByWithRelationInput | Prisma.GenerationStepOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.GenerationStepWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` GenerationSteps from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` GenerationSteps.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned GenerationSteps
  **/
  _count?: true | GenerationStepCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: GenerationStepAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: GenerationStepSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: GenerationStepMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: GenerationStepMaxAggregateInputType
}

export type GetGenerationStepAggregateType<T extends GenerationStepAggregateArgs> = {
      [P in keyof T & keyof AggregateGenerationStep]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateGenerationStep[P]>
    : Prisma.GetScalarType<T[P], AggregateGenerationStep[P]>
}




export type GenerationStepGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GenerationStepWhereInput
  orderBy?: Prisma.GenerationStepOrderByWithAggregationInput | Prisma.GenerationStepOrderByWithAggregationInput[]
  by: Prisma.GenerationStepScalarFieldEnum[] | Prisma.GenerationStepScalarFieldEnum
  having?: Prisma.GenerationStepScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: GenerationStepCountAggregateInputType | true
  _avg?: GenerationStepAvgAggregateInputType
  _sum?: GenerationStepSumAggregateInputType
  _min?: GenerationStepMinAggregateInputType
  _max?: GenerationStepMaxAggregateInputType
}

export type GenerationStepGroupByOutputType = {
  id: string
  generationId: string
  name: string
  description: string
  type: $Enums.StepType
  status: $Enums.StepStatus
  progress: number
  order: number
  startedAt: Date | null
  completedAt: Date | null
  errorMsg: string | null
  createdAt: Date
  updatedAt: Date
  _count: GenerationStepCountAggregateOutputType | null
  _avg: GenerationStepAvgAggregateOutputType | null
  _sum: GenerationStepSumAggregateOutputType | null
  _min: GenerationStepMinAggregateOutputType | null
  _max: GenerationStepMaxAggregateOutputType | null
}

type GetGenerationStepGroupByPayload<T extends GenerationStepGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<GenerationStepGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof GenerationStepGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], GenerationStepGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], GenerationStepGroupByOutputType[P]>
      }
    >
  >



export type GenerationStepWhereInput = {
  AND?: Prisma.GenerationStepWhereInput | Prisma.GenerationStepWhereInput[]
  OR?: Prisma.GenerationStepWhereInput[]
  NOT?: Prisma.GenerationStepWhereInput | Prisma.GenerationStepWhereInput[]
  id?: Prisma.StringFilter<"GenerationStep"> | string
  generationId?: Prisma.StringFilter<"GenerationStep"> | string
  name?: Prisma.StringFilter<"GenerationStep"> | string
  description?: Prisma.StringFilter<"GenerationStep"> | string
  type?: Prisma.EnumStepTypeFilter<"GenerationStep"> | $Enums.StepType
  status?: Prisma.EnumStepStatusFilter<"GenerationStep"> | $Enums.StepStatus
  progress?: Prisma.IntFilter<"GenerationStep"> | number
  order?: Prisma.IntFilter<"GenerationStep"> | number
  startedAt?: Prisma.DateTimeNullableFilter<"GenerationStep"> | Date | string | null
  completedAt?: Prisma.DateTimeNullableFilter<"GenerationStep"> | Date | string | null
  errorMsg?: Prisma.StringNullableFilter<"GenerationStep"> | string | null
  createdAt?: Prisma.DateTimeFilter<"GenerationStep"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"GenerationStep"> | Date | string
  generation?: Prisma.XOR<Prisma.GenerationScalarRelationFilter, Prisma.GenerationWhereInput>
}

export type GenerationStepOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  generationId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  type?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  order?: Prisma.SortOrder
  startedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  completedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  errorMsg?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  generation?: Prisma.GenerationOrderByWithRelationInput
}

export type GenerationStepWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.GenerationStepWhereInput | Prisma.GenerationStepWhereInput[]
  OR?: Prisma.GenerationStepWhereInput[]
  NOT?: Prisma.GenerationStepWhereInput | Prisma.GenerationStepWhereInput[]
  generationId?: Prisma.StringFilter<"GenerationStep"> | string
  name?: Prisma.StringFilter<"GenerationStep"> | string
  description?: Prisma.StringFilter<"GenerationStep"> | string
  type?: Prisma.EnumStepTypeFilter<"GenerationStep"> | $Enums.StepType
  status?: Prisma.EnumStepStatusFilter<"GenerationStep"> | $Enums.StepStatus
  progress?: Prisma.IntFilter<"GenerationStep"> | number
  order?: Prisma.IntFilter<"GenerationStep"> | number
  startedAt?: Prisma.DateTimeNullableFilter<"GenerationStep"> | Date | string | null
  completedAt?: Prisma.DateTimeNullableFilter<"GenerationStep"> | Date | string | null
  errorMsg?: Prisma.StringNullableFilter<"GenerationStep"> | string | null
  createdAt?: Prisma.DateTimeFilter<"GenerationStep"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"GenerationStep"> | Date | string
  generation?: Prisma.XOR<Prisma.GenerationScalarRelationFilter, Prisma.GenerationWhereInput>
}, "id">

export type GenerationStepOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  generationId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  type?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  order?: Prisma.SortOrder
  startedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  completedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  errorMsg?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.GenerationStepCountOrderByAggregateInput
  _avg?: Prisma.GenerationStepAvgOrderByAggregateInput
  _max?: Prisma.GenerationStepMaxOrderByAggregateInput
  _min?: Prisma.GenerationStepMinOrderByAggregateInput
  _sum?: Prisma.GenerationStepSumOrderByAggregateInput
}

export type GenerationStepScalarWhereWithAggregatesInput = {
  AND?: Prisma.GenerationStepScalarWhereWithAggregatesInput | Prisma.GenerationStepScalarWhereWithAggregatesInput[]
  OR?: Prisma.GenerationStepScalarWhereWithAggregatesInput[]
  NOT?: Prisma.GenerationStepScalarWhereWithAggregatesInput | Prisma.GenerationStepScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"GenerationStep"> | string
  generationId?: Prisma.StringWithAggregatesFilter<"GenerationStep"> | string
  name?: Prisma.StringWithAggregatesFilter<"GenerationStep"> | string
  description?: Prisma.StringWithAggregatesFilter<"GenerationStep"> | string
  type?: Prisma.EnumStepTypeWithAggregatesFilter<"GenerationStep"> | $Enums.StepType
  status?: Prisma.EnumStepStatusWithAggregatesFilter<"GenerationStep"> | $Enums.StepStatus
  progress?: Prisma.IntWithAggregatesFilter<"GenerationStep"> | number
  order?: Prisma.IntWithAggregatesFilter<"GenerationStep"> | number
  startedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"GenerationStep"> | Date | string | null
  completedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"GenerationStep"> | Date | string | null
  errorMsg?: Prisma.StringNullableWithAggregatesFilter<"GenerationStep"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"GenerationStep"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"GenerationStep"> | Date | string
}

export type GenerationStepCreateInput = {
  id?: string
  name: string
  description: string
  type: $Enums.StepType
  status?: $Enums.StepStatus
  progress?: number
  order: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  generation: Prisma.GenerationCreateNestedOneWithoutStepsInput
}

export type GenerationStepUncheckedCreateInput = {
  id?: string
  generationId: string
  name: string
  description: string
  type: $Enums.StepType
  status?: $Enums.StepStatus
  progress?: number
  order: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type GenerationStepUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumStepTypeFieldUpdateOperationsInput | $Enums.StepType
  status?: Prisma.EnumStepStatusFieldUpdateOperationsInput | $Enums.StepStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  generation?: Prisma.GenerationUpdateOneRequiredWithoutStepsNestedInput
}

export type GenerationStepUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  generationId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumStepTypeFieldUpdateOperationsInput | $Enums.StepType
  status?: Prisma.EnumStepStatusFieldUpdateOperationsInput | $Enums.StepStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GenerationStepCreateManyInput = {
  id?: string
  generationId: string
  name: string
  description: string
  type: $Enums.StepType
  status?: $Enums.StepStatus
  progress?: number
  order: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type GenerationStepUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumStepTypeFieldUpdateOperationsInput | $Enums.StepType
  status?: Prisma.EnumStepStatusFieldUpdateOperationsInput | $Enums.StepStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GenerationStepUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  generationId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumStepTypeFieldUpdateOperationsInput | $Enums.StepType
  status?: Prisma.EnumStepStatusFieldUpdateOperationsInput | $Enums.StepStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GenerationStepListRelationFilter = {
  every?: Prisma.GenerationStepWhereInput
  some?: Prisma.GenerationStepWhereInput
  none?: Prisma.GenerationStepWhereInput
}

export type GenerationStepOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type GenerationStepCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  generationId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  type?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  order?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  completedAt?: Prisma.SortOrder
  errorMsg?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type GenerationStepAvgOrderByAggregateInput = {
  progress?: Prisma.SortOrder
  order?: Prisma.SortOrder
}

export type GenerationStepMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  generationId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  type?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  order?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  completedAt?: Prisma.SortOrder
  errorMsg?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type GenerationStepMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  generationId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  type?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  order?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  completedAt?: Prisma.SortOrder
  errorMsg?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type GenerationStepSumOrderByAggregateInput = {
  progress?: Prisma.SortOrder
  order?: Prisma.SortOrder
}

export type GenerationStepCreateNestedManyWithoutGenerationInput = {
  create?: Prisma.XOR<Prisma.GenerationStepCreateWithoutGenerationInput, Prisma.GenerationStepUncheckedCreateWithoutGenerationInput> | Prisma.GenerationStepCreateWithoutGenerationInput[] | Prisma.GenerationStepUncheckedCreateWithoutGenerationInput[]
  connectOrCreate?: Prisma.GenerationStepCreateOrConnectWithoutGenerationInput | Prisma.GenerationStepCreateOrConnectWithoutGenerationInput[]
  createMany?: Prisma.GenerationStepCreateManyGenerationInputEnvelope
  connect?: Prisma.GenerationStepWhereUniqueInput | Prisma.GenerationStepWhereUniqueInput[]
}

export type GenerationStepUncheckedCreateNestedManyWithoutGenerationInput = {
  create?: Prisma.XOR<Prisma.GenerationStepCreateWithoutGenerationInput, Prisma.GenerationStepUncheckedCreateWithoutGenerationInput> | Prisma.GenerationStepCreateWithoutGenerationInput[] | Prisma.GenerationStepUncheckedCreateWithoutGenerationInput[]
  connectOrCreate?: Prisma.GenerationStepCreateOrConnectWithoutGenerationInput | Prisma.GenerationStepCreateOrConnectWithoutGenerationInput[]
  createMany?: Prisma.GenerationStepCreateManyGenerationInputEnvelope
  connect?: Prisma.GenerationStepWhereUniqueInput | Prisma.GenerationStepWhereUniqueInput[]
}

export type GenerationStepUpdateManyWithoutGenerationNestedInput = {
  create?: Prisma.XOR<Prisma.GenerationStepCreateWithoutGenerationInput, Prisma.GenerationStepUncheckedCreateWithoutGenerationInput> | Prisma.GenerationStepCreateWithoutGenerationInput[] | Prisma.GenerationStepUncheckedCreateWithoutGenerationInput[]
  connectOrCreate?: Prisma.GenerationStepCreateOrConnectWithoutGenerationInput | Prisma.GenerationStepCreateOrConnectWithoutGenerationInput[]
  upsert?: Prisma.GenerationStepUpsertWithWhereUniqueWithoutGenerationInput | Prisma.GenerationStepUpsertWithWhereUniqueWithoutGenerationInput[]
  createMany?: Prisma.GenerationStepCreateManyGenerationInputEnvelope
  set?: Prisma.GenerationStepWhereUniqueInput | Prisma.GenerationStepWhereUniqueInput[]
  disconnect?: Prisma.GenerationStepWhereUniqueInput | Prisma.GenerationStepWhereUniqueInput[]
  delete?: Prisma.GenerationStepWhereUniqueInput | Prisma.GenerationStepWhereUniqueInput[]
  connect?: Prisma.GenerationStepWhereUniqueInput | Prisma.GenerationStepWhereUniqueInput[]
  update?: Prisma.GenerationStepUpdateWithWhereUniqueWithoutGenerationInput | Prisma.GenerationStepUpdateWithWhereUniqueWithoutGenerationInput[]
  updateMany?: Prisma.GenerationStepUpdateManyWithWhereWithoutGenerationInput | Prisma.GenerationStepUpdateManyWithWhereWithoutGenerationInput[]
  deleteMany?: Prisma.GenerationStepScalarWhereInput | Prisma.GenerationStepScalarWhereInput[]
}

export type GenerationStepUncheckedUpdateManyWithoutGenerationNestedInput = {
  create?: Prisma.XOR<Prisma.GenerationStepCreateWithoutGenerationInput, Prisma.GenerationStepUncheckedCreateWithoutGenerationInput> | Prisma.GenerationStepCreateWithoutGenerationInput[] | Prisma.GenerationStepUncheckedCreateWithoutGenerationInput[]
  connectOrCreate?: Prisma.GenerationStepCreateOrConnectWithoutGenerationInput | Prisma.GenerationStepCreateOrConnectWithoutGenerationInput[]
  upsert?: Prisma.GenerationStepUpsertWithWhereUniqueWithoutGenerationInput | Prisma.GenerationStepUpsertWithWhereUniqueWithoutGenerationInput[]
  createMany?: Prisma.GenerationStepCreateManyGenerationInputEnvelope
  set?: Prisma.GenerationStepWhereUniqueInput | Prisma.GenerationStepWhereUniqueInput[]
  disconnect?: Prisma.GenerationStepWhereUniqueInput | Prisma.GenerationStepWhereUniqueInput[]
  delete?: Prisma.GenerationStepWhereUniqueInput | Prisma.GenerationStepWhereUniqueInput[]
  connect?: Prisma.GenerationStepWhereUniqueInput | Prisma.GenerationStepWhereUniqueInput[]
  update?: Prisma.GenerationStepUpdateWithWhereUniqueWithoutGenerationInput | Prisma.GenerationStepUpdateWithWhereUniqueWithoutGenerationInput[]
  updateMany?: Prisma.GenerationStepUpdateManyWithWhereWithoutGenerationInput | Prisma.GenerationStepUpdateManyWithWhereWithoutGenerationInput[]
  deleteMany?: Prisma.GenerationStepScalarWhereInput | Prisma.GenerationStepScalarWhereInput[]
}

export type EnumStepTypeFieldUpdateOperationsInput = {
  set?: $Enums.StepType
}

export type EnumStepStatusFieldUpdateOperationsInput = {
  set?: $Enums.StepStatus
}

export type GenerationStepCreateWithoutGenerationInput = {
  id?: string
  name: string
  description: string
  type: $Enums.StepType
  status?: $Enums.StepStatus
  progress?: number
  order: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type GenerationStepUncheckedCreateWithoutGenerationInput = {
  id?: string
  name: string
  description: string
  type: $Enums.StepType
  status?: $Enums.StepStatus
  progress?: number
  order: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type GenerationStepCreateOrConnectWithoutGenerationInput = {
  where: Prisma.GenerationStepWhereUniqueInput
  create: Prisma.XOR<Prisma.GenerationStepCreateWithoutGenerationInput, Prisma.GenerationStepUncheckedCreateWithoutGenerationInput>
}

export type GenerationStepCreateManyGenerationInputEnvelope = {
  data: Prisma.GenerationStepCreateManyGenerationInput | Prisma.GenerationStepCreateManyGenerationInput[]
  skipDuplicates?: boolean
}

export type GenerationStepUpsertWithWhereUniqueWithoutGenerationInput = {
  where: Prisma.GenerationStepWhereUniqueInput
  update: Prisma.XOR<Prisma.GenerationStepUpdateWithoutGenerationInput, Prisma.GenerationStepUncheckedUpdateWithoutGenerationInput>
  create: Prisma.XOR<Prisma.GenerationStepCreateWithoutGenerationInput, Prisma.GenerationStepUncheckedCreateWithoutGenerationInput>
}

export type GenerationStepUpdateWithWhereUniqueWithoutGenerationInput = {
  where: Prisma.GenerationStepWhereUniqueInput
  data: Prisma.XOR<Prisma.GenerationStepUpdateWithoutGenerationInput, Prisma.GenerationStepUncheckedUpdateWithoutGenerationInput>
}

export type GenerationStepUpdateManyWithWhereWithoutGenerationInput = {
  where: Prisma.GenerationStepScalarWhereInput
  data: Prisma.XOR<Prisma.GenerationStepUpdateManyMutationInput, Prisma.GenerationStepUncheckedUpdateManyWithoutGenerationInput>
}

export type GenerationStepScalarWhereInput = {
  AND?: Prisma.GenerationStepScalarWhereInput | Prisma.GenerationStepScalarWhereInput[]
  OR?: Prisma.GenerationStepScalarWhereInput[]
  NOT?: Prisma.GenerationStepScalarWhereInput | Prisma.GenerationStepScalarWhereInput[]
  id?: Prisma.StringFilter<"GenerationStep"> | string
  generationId?: Prisma.StringFilter<"GenerationStep"> | string
  name?: Prisma.StringFilter<"GenerationStep"> | string
  description?: Prisma.StringFilter<"GenerationStep"> | string
  type?: Prisma.EnumStepTypeFilter<"GenerationStep"> | $Enums.StepType
  status?: Prisma.EnumStepStatusFilter<"GenerationStep"> | $Enums.StepStatus
  progress?: Prisma.IntFilter<"GenerationStep"> | number
  order?: Prisma.IntFilter<"GenerationStep"> | number
  startedAt?: Prisma.DateTimeNullableFilter<"GenerationStep"> | Date | string | null
  completedAt?: Prisma.DateTimeNullableFilter<"GenerationStep"> | Date | string | null
  errorMsg?: Prisma.StringNullableFilter<"GenerationStep"> | string | null
  createdAt?: Prisma.DateTimeFilter<"GenerationStep"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"GenerationStep"> | Date | string
}

export type GenerationStepCreateManyGenerationInput = {
  id?: string
  name: string
  description: string
  type: $Enums.StepType
  status?: $Enums.StepStatus
  progress?: number
  order: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type GenerationStepUpdateWithoutGenerationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumStepTypeFieldUpdateOperationsInput | $Enums.StepType
  status?: Prisma.EnumStepStatusFieldUpdateOperationsInput | $Enums.StepStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GenerationStepUncheckedUpdateWithoutGenerationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumStepTypeFieldUpdateOperationsInput | $Enums.StepType
  status?: Prisma.EnumStepStatusFieldUpdateOperationsInput | $Enums.StepStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GenerationStepUncheckedUpdateManyWithoutGenerationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumStepTypeFieldUpdateOperationsInput | $Enums.StepType
  status?: Prisma.EnumStepStatusFieldUpdateOperationsInput | $Enums.StepStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type GenerationStepSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  generationId?: boolean
  name?: boolean
  description?: boolean
  type?: boolean
  status?: boolean
  progress?: boolean
  order?: boolean
  startedAt?: boolean
  completedAt?: boolean
  errorMsg?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  generation?: boolean | Prisma.GenerationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["generationStep"]>

export type GenerationStepSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  generationId?: boolean
  name?: boolean
  description?: boolean
  type?: boolean
  status?: boolean
  progress?: boolean
  order?: boolean
  startedAt?: boolean
  completedAt?: boolean
  errorMsg?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  generation?: boolean | Prisma.GenerationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["generationStep"]>

export type GenerationStepSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  generationId?: boolean
  name?: boolean
  description?: boolean
  type?: boolean
  status?: boolean
  progress?: boolean
  order?: boolean
  startedAt?: boolean
  completedAt?: boolean
  errorMsg?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  generation?: boolean | Prisma.GenerationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["generationStep"]>

export type GenerationStepSelectScalar = {
  id?: boolean
  generationId?: boolean
  name?: boolean
  description?: boolean
  type?: boolean
  status?: boolean
  progress?: boolean
  order?: boolean
  startedAt?: boolean
  completedAt?: boolean
  errorMsg?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type GenerationStepOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "generationId" | "name" | "description" | "type" | "status" | "progress" | "order" | "startedAt" | "completedAt" | "errorMsg" | "createdAt" | "updatedAt", ExtArgs["result"]["generationStep"]>
export type GenerationStepInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  generation?: boolean | Prisma.GenerationDefaultArgs<ExtArgs>
}
export type GenerationStepIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  generation?: boolean | Prisma.GenerationDefaultArgs<ExtArgs>
}
export type GenerationStepIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  generation?: boolean | Prisma.GenerationDefaultArgs<ExtArgs>
}

export type $GenerationStepPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "GenerationStep"
  objects: {
    generation: Prisma.$GenerationPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    generationId: string
    name: string
    description: string
    type: $Enums.StepType
    status: $Enums.StepStatus
    progress: number
    order: number
    startedAt: Date | null
    completedAt: Date | null
    errorMsg: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["generationStep"]>
  composites: {}
}

export type GenerationStepGetPayload<S extends boolean | null | undefined | GenerationStepDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload, S>

export type GenerationStepCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<GenerationStepFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: GenerationStepCountAggregateInputType | true
  }

export interface GenerationStepDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GenerationStep'], meta: { name: 'GenerationStep' } }
  /**
   * Find zero or one GenerationStep that matches the filter.
   * @param {GenerationStepFindUniqueArgs} args - Arguments to find a GenerationStep
   * @example
   * // Get one GenerationStep
   * const generationStep = await prisma.generationStep.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends GenerationStepFindUniqueArgs>(args: Prisma.SelectSubset<T, GenerationStepFindUniqueArgs<ExtArgs>>): Prisma.Prisma__GenerationStepClient<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one GenerationStep that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {GenerationStepFindUniqueOrThrowArgs} args - Arguments to find a GenerationStep
   * @example
   * // Get one GenerationStep
   * const generationStep = await prisma.generationStep.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends GenerationStepFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, GenerationStepFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__GenerationStepClient<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first GenerationStep that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationStepFindFirstArgs} args - Arguments to find a GenerationStep
   * @example
   * // Get one GenerationStep
   * const generationStep = await prisma.generationStep.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends GenerationStepFindFirstArgs>(args?: Prisma.SelectSubset<T, GenerationStepFindFirstArgs<ExtArgs>>): Prisma.Prisma__GenerationStepClient<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first GenerationStep that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationStepFindFirstOrThrowArgs} args - Arguments to find a GenerationStep
   * @example
   * // Get one GenerationStep
   * const generationStep = await prisma.generationStep.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends GenerationStepFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, GenerationStepFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__GenerationStepClient<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more GenerationSteps that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationStepFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all GenerationSteps
   * const generationSteps = await prisma.generationStep.findMany()
   * 
   * // Get first 10 GenerationSteps
   * const generationSteps = await prisma.generationStep.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const generationStepWithIdOnly = await prisma.generationStep.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends GenerationStepFindManyArgs>(args?: Prisma.SelectSubset<T, GenerationStepFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a GenerationStep.
   * @param {GenerationStepCreateArgs} args - Arguments to create a GenerationStep.
   * @example
   * // Create one GenerationStep
   * const GenerationStep = await prisma.generationStep.create({
   *   data: {
   *     // ... data to create a GenerationStep
   *   }
   * })
   * 
   */
  create<T extends GenerationStepCreateArgs>(args: Prisma.SelectSubset<T, GenerationStepCreateArgs<ExtArgs>>): Prisma.Prisma__GenerationStepClient<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many GenerationSteps.
   * @param {GenerationStepCreateManyArgs} args - Arguments to create many GenerationSteps.
   * @example
   * // Create many GenerationSteps
   * const generationStep = await prisma.generationStep.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends GenerationStepCreateManyArgs>(args?: Prisma.SelectSubset<T, GenerationStepCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many GenerationSteps and returns the data saved in the database.
   * @param {GenerationStepCreateManyAndReturnArgs} args - Arguments to create many GenerationSteps.
   * @example
   * // Create many GenerationSteps
   * const generationStep = await prisma.generationStep.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many GenerationSteps and only return the `id`
   * const generationStepWithIdOnly = await prisma.generationStep.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends GenerationStepCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, GenerationStepCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a GenerationStep.
   * @param {GenerationStepDeleteArgs} args - Arguments to delete one GenerationStep.
   * @example
   * // Delete one GenerationStep
   * const GenerationStep = await prisma.generationStep.delete({
   *   where: {
   *     // ... filter to delete one GenerationStep
   *   }
   * })
   * 
   */
  delete<T extends GenerationStepDeleteArgs>(args: Prisma.SelectSubset<T, GenerationStepDeleteArgs<ExtArgs>>): Prisma.Prisma__GenerationStepClient<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one GenerationStep.
   * @param {GenerationStepUpdateArgs} args - Arguments to update one GenerationStep.
   * @example
   * // Update one GenerationStep
   * const generationStep = await prisma.generationStep.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends GenerationStepUpdateArgs>(args: Prisma.SelectSubset<T, GenerationStepUpdateArgs<ExtArgs>>): Prisma.Prisma__GenerationStepClient<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more GenerationSteps.
   * @param {GenerationStepDeleteManyArgs} args - Arguments to filter GenerationSteps to delete.
   * @example
   * // Delete a few GenerationSteps
   * const { count } = await prisma.generationStep.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends GenerationStepDeleteManyArgs>(args?: Prisma.SelectSubset<T, GenerationStepDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more GenerationSteps.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationStepUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many GenerationSteps
   * const generationStep = await prisma.generationStep.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends GenerationStepUpdateManyArgs>(args: Prisma.SelectSubset<T, GenerationStepUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more GenerationSteps and returns the data updated in the database.
   * @param {GenerationStepUpdateManyAndReturnArgs} args - Arguments to update many GenerationSteps.
   * @example
   * // Update many GenerationSteps
   * const generationStep = await prisma.generationStep.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more GenerationSteps and only return the `id`
   * const generationStepWithIdOnly = await prisma.generationStep.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends GenerationStepUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, GenerationStepUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one GenerationStep.
   * @param {GenerationStepUpsertArgs} args - Arguments to update or create a GenerationStep.
   * @example
   * // Update or create a GenerationStep
   * const generationStep = await prisma.generationStep.upsert({
   *   create: {
   *     // ... data to create a GenerationStep
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the GenerationStep we want to update
   *   }
   * })
   */
  upsert<T extends GenerationStepUpsertArgs>(args: Prisma.SelectSubset<T, GenerationStepUpsertArgs<ExtArgs>>): Prisma.Prisma__GenerationStepClient<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of GenerationSteps.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationStepCountArgs} args - Arguments to filter GenerationSteps to count.
   * @example
   * // Count the number of GenerationSteps
   * const count = await prisma.generationStep.count({
   *   where: {
   *     // ... the filter for the GenerationSteps we want to count
   *   }
   * })
  **/
  count<T extends GenerationStepCountArgs>(
    args?: Prisma.Subset<T, GenerationStepCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], GenerationStepCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a GenerationStep.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationStepAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends GenerationStepAggregateArgs>(args: Prisma.Subset<T, GenerationStepAggregateArgs>): Prisma.PrismaPromise<GetGenerationStepAggregateType<T>>

  /**
   * Group by GenerationStep.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationStepGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends GenerationStepGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: GenerationStepGroupByArgs['orderBy'] }
      : { orderBy?: GenerationStepGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, GenerationStepGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGenerationStepGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the GenerationStep model
 */
readonly fields: GenerationStepFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for GenerationStep.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__GenerationStepClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  generation<T extends Prisma.GenerationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.GenerationDefaultArgs<ExtArgs>>): Prisma.Prisma__GenerationClient<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the GenerationStep model
 */
export interface GenerationStepFieldRefs {
  readonly id: Prisma.FieldRef<"GenerationStep", 'String'>
  readonly generationId: Prisma.FieldRef<"GenerationStep", 'String'>
  readonly name: Prisma.FieldRef<"GenerationStep", 'String'>
  readonly description: Prisma.FieldRef<"GenerationStep", 'String'>
  readonly type: Prisma.FieldRef<"GenerationStep", 'StepType'>
  readonly status: Prisma.FieldRef<"GenerationStep", 'StepStatus'>
  readonly progress: Prisma.FieldRef<"GenerationStep", 'Int'>
  readonly order: Prisma.FieldRef<"GenerationStep", 'Int'>
  readonly startedAt: Prisma.FieldRef<"GenerationStep", 'DateTime'>
  readonly completedAt: Prisma.FieldRef<"GenerationStep", 'DateTime'>
  readonly errorMsg: Prisma.FieldRef<"GenerationStep", 'String'>
  readonly createdAt: Prisma.FieldRef<"GenerationStep", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"GenerationStep", 'DateTime'>
}
    

// Custom InputTypes
/**
 * GenerationStep findUnique
 */
export type GenerationStepFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
  /**
   * Filter, which GenerationStep to fetch.
   */
  where: Prisma.GenerationStepWhereUniqueInput
}

/**
 * GenerationStep findUniqueOrThrow
 */
export type GenerationStepFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
  /**
   * Filter, which GenerationStep to fetch.
   */
  where: Prisma.GenerationStepWhereUniqueInput
}

/**
 * GenerationStep findFirst
 */
export type GenerationStepFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
  /**
   * Filter, which GenerationStep to fetch.
   */
  where?: Prisma.GenerationStepWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of GenerationSteps to fetch.
   */
  orderBy?: Prisma.GenerationStepOrderByWithRelationInput | Prisma.GenerationStepOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for GenerationSteps.
   */
  cursor?: Prisma.GenerationStepWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` GenerationSteps from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` GenerationSteps.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of GenerationSteps.
   */
  distinct?: Prisma.GenerationStepScalarFieldEnum | Prisma.GenerationStepScalarFieldEnum[]
}

/**
 * GenerationStep findFirstOrThrow
 */
export type GenerationStepFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
  /**
   * Filter, which GenerationStep to fetch.
   */
  where?: Prisma.GenerationStepWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of GenerationSteps to fetch.
   */
  orderBy?: Prisma.GenerationStepOrderByWithRelationInput | Prisma.GenerationStepOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for GenerationSteps.
   */
  cursor?: Prisma.GenerationStepWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` GenerationSteps from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` GenerationSteps.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of GenerationSteps.
   */
  distinct?: Prisma.GenerationStepScalarFieldEnum | Prisma.GenerationStepScalarFieldEnum[]
}

/**
 * GenerationStep findMany
 */
export type GenerationStepFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
  /**
   * Filter, which GenerationSteps to fetch.
   */
  where?: Prisma.GenerationStepWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of GenerationSteps to fetch.
   */
  orderBy?: Prisma.GenerationStepOrderByWithRelationInput | Prisma.GenerationStepOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing GenerationSteps.
   */
  cursor?: Prisma.GenerationStepWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` GenerationSteps from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` GenerationSteps.
   */
  skip?: number
  distinct?: Prisma.GenerationStepScalarFieldEnum | Prisma.GenerationStepScalarFieldEnum[]
}

/**
 * GenerationStep create
 */
export type GenerationStepCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
  /**
   * The data needed to create a GenerationStep.
   */
  data: Prisma.XOR<Prisma.GenerationStepCreateInput, Prisma.GenerationStepUncheckedCreateInput>
}

/**
 * GenerationStep createMany
 */
export type GenerationStepCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many GenerationSteps.
   */
  data: Prisma.GenerationStepCreateManyInput | Prisma.GenerationStepCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * GenerationStep createManyAndReturn
 */
export type GenerationStepCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * The data used to create many GenerationSteps.
   */
  data: Prisma.GenerationStepCreateManyInput | Prisma.GenerationStepCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * GenerationStep update
 */
export type GenerationStepUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
  /**
   * The data needed to update a GenerationStep.
   */
  data: Prisma.XOR<Prisma.GenerationStepUpdateInput, Prisma.GenerationStepUncheckedUpdateInput>
  /**
   * Choose, which GenerationStep to update.
   */
  where: Prisma.GenerationStepWhereUniqueInput
}

/**
 * GenerationStep updateMany
 */
export type GenerationStepUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update GenerationSteps.
   */
  data: Prisma.XOR<Prisma.GenerationStepUpdateManyMutationInput, Prisma.GenerationStepUncheckedUpdateManyInput>
  /**
   * Filter which GenerationSteps to update
   */
  where?: Prisma.GenerationStepWhereInput
  /**
   * Limit how many GenerationSteps to update.
   */
  limit?: number
}

/**
 * GenerationStep updateManyAndReturn
 */
export type GenerationStepUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * The data used to update GenerationSteps.
   */
  data: Prisma.XOR<Prisma.GenerationStepUpdateManyMutationInput, Prisma.GenerationStepUncheckedUpdateManyInput>
  /**
   * Filter which GenerationSteps to update
   */
  where?: Prisma.GenerationStepWhereInput
  /**
   * Limit how many GenerationSteps to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * GenerationStep upsert
 */
export type GenerationStepUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
  /**
   * The filter to search for the GenerationStep to update in case it exists.
   */
  where: Prisma.GenerationStepWhereUniqueInput
  /**
   * In case the GenerationStep found by the `where` argument doesn't exist, create a new GenerationStep with this data.
   */
  create: Prisma.XOR<Prisma.GenerationStepCreateInput, Prisma.GenerationStepUncheckedCreateInput>
  /**
   * In case the GenerationStep was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.GenerationStepUpdateInput, Prisma.GenerationStepUncheckedUpdateInput>
}

/**
 * GenerationStep delete
 */
export type GenerationStepDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
  /**
   * Filter which GenerationStep to delete.
   */
  where: Prisma.GenerationStepWhereUniqueInput
}

/**
 * GenerationStep deleteMany
 */
export type GenerationStepDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which GenerationSteps to delete
   */
  where?: Prisma.GenerationStepWhereInput
  /**
   * Limit how many GenerationSteps to delete.
   */
  limit?: number
}

/**
 * GenerationStep without action
 */
export type GenerationStepDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
}
