
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Generation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Generation
 * 
 */
export type GenerationModel = runtime.Types.Result.DefaultSelection<Prisma.$GenerationPayload>

export type AggregateGeneration = {
  _count: GenerationCountAggregateOutputType | null
  _avg: GenerationAvgAggregateOutputType | null
  _sum: GenerationSumAggregateOutputType | null
  _min: GenerationMinAggregateOutputType | null
  _max: GenerationMaxAggregateOutputType | null
}

export type GenerationAvgAggregateOutputType = {
  progress: number | null
  totalSteps: number | null
}

export type GenerationSumAggregateOutputType = {
  progress: number | null
  totalSteps: number | null
}

export type GenerationMinAggregateOutputType = {
  id: string | null
  projectId: string | null
  status: $Enums.GenerationStatus | null
  progress: number | null
  currentStep: string | null
  totalSteps: number | null
  startedAt: Date | null
  completedAt: Date | null
  errorMsg: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type GenerationMaxAggregateOutputType = {
  id: string | null
  projectId: string | null
  status: $Enums.GenerationStatus | null
  progress: number | null
  currentStep: string | null
  totalSteps: number | null
  startedAt: Date | null
  completedAt: Date | null
  errorMsg: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type GenerationCountAggregateOutputType = {
  id: number
  projectId: number
  status: number
  progress: number
  currentStep: number
  totalSteps: number
  startedAt: number
  completedAt: number
  errorMsg: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type GenerationAvgAggregateInputType = {
  progress?: true
  totalSteps?: true
}

export type GenerationSumAggregateInputType = {
  progress?: true
  totalSteps?: true
}

export type GenerationMinAggregateInputType = {
  id?: true
  projectId?: true
  status?: true
  progress?: true
  currentStep?: true
  totalSteps?: true
  startedAt?: true
  completedAt?: true
  errorMsg?: true
  createdAt?: true
  updatedAt?: true
}

export type GenerationMaxAggregateInputType = {
  id?: true
  projectId?: true
  status?: true
  progress?: true
  currentStep?: true
  totalSteps?: true
  startedAt?: true
  completedAt?: true
  errorMsg?: true
  createdAt?: true
  updatedAt?: true
}

export type GenerationCountAggregateInputType = {
  id?: true
  projectId?: true
  status?: true
  progress?: true
  currentStep?: true
  totalSteps?: true
  startedAt?: true
  completedAt?: true
  errorMsg?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type GenerationAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Generation to aggregate.
   */
  where?: Prisma.GenerationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Generations to fetch.
   */
  orderBy?: Prisma.GenerationOrderByWithRelationInput | Prisma.GenerationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.GenerationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Generations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Generations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Generations
  **/
  _count?: true | GenerationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: GenerationAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: GenerationSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: GenerationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: GenerationMaxAggregateInputType
}

export type GetGenerationAggregateType<T extends GenerationAggregateArgs> = {
      [P in keyof T & keyof AggregateGeneration]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateGeneration[P]>
    : Prisma.GetScalarType<T[P], AggregateGeneration[P]>
}




export type GenerationGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GenerationWhereInput
  orderBy?: Prisma.GenerationOrderByWithAggregationInput | Prisma.GenerationOrderByWithAggregationInput[]
  by: Prisma.GenerationScalarFieldEnum[] | Prisma.GenerationScalarFieldEnum
  having?: Prisma.GenerationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: GenerationCountAggregateInputType | true
  _avg?: GenerationAvgAggregateInputType
  _sum?: GenerationSumAggregateInputType
  _min?: GenerationMinAggregateInputType
  _max?: GenerationMaxAggregateInputType
}

export type GenerationGroupByOutputType = {
  id: string
  projectId: string
  status: $Enums.GenerationStatus
  progress: number
  currentStep: string | null
  totalSteps: number
  startedAt: Date | null
  completedAt: Date | null
  errorMsg: string | null
  createdAt: Date
  updatedAt: Date
  _count: GenerationCountAggregateOutputType | null
  _avg: GenerationAvgAggregateOutputType | null
  _sum: GenerationSumAggregateOutputType | null
  _min: GenerationMinAggregateOutputType | null
  _max: GenerationMaxAggregateOutputType | null
}

type GetGenerationGroupByPayload<T extends GenerationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<GenerationGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof GenerationGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], GenerationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], GenerationGroupByOutputType[P]>
      }
    >
  >



export type GenerationWhereInput = {
  AND?: Prisma.GenerationWhereInput | Prisma.GenerationWhereInput[]
  OR?: Prisma.GenerationWhereInput[]
  NOT?: Prisma.GenerationWhereInput | Prisma.GenerationWhereInput[]
  id?: Prisma.StringFilter<"Generation"> | string
  projectId?: Prisma.StringFilter<"Generation"> | string
  status?: Prisma.EnumGenerationStatusFilter<"Generation"> | $Enums.GenerationStatus
  progress?: Prisma.IntFilter<"Generation"> | number
  currentStep?: Prisma.StringNullableFilter<"Generation"> | string | null
  totalSteps?: Prisma.IntFilter<"Generation"> | number
  startedAt?: Prisma.DateTimeNullableFilter<"Generation"> | Date | string | null
  completedAt?: Prisma.DateTimeNullableFilter<"Generation"> | Date | string | null
  errorMsg?: Prisma.StringNullableFilter<"Generation"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Generation"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Generation"> | Date | string
  project?: Prisma.XOR<Prisma.ProjectScalarRelationFilter, Prisma.ProjectWhereInput>
  steps?: Prisma.GenerationStepListRelationFilter
}

export type GenerationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  projectId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  currentStep?: Prisma.SortOrderInput | Prisma.SortOrder
  totalSteps?: Prisma.SortOrder
  startedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  completedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  errorMsg?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  project?: Prisma.ProjectOrderByWithRelationInput
  steps?: Prisma.GenerationStepOrderByRelationAggregateInput
}

export type GenerationWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.GenerationWhereInput | Prisma.GenerationWhereInput[]
  OR?: Prisma.GenerationWhereInput[]
  NOT?: Prisma.GenerationWhereInput | Prisma.GenerationWhereInput[]
  projectId?: Prisma.StringFilter<"Generation"> | string
  status?: Prisma.EnumGenerationStatusFilter<"Generation"> | $Enums.GenerationStatus
  progress?: Prisma.IntFilter<"Generation"> | number
  currentStep?: Prisma.StringNullableFilter<"Generation"> | string | null
  totalSteps?: Prisma.IntFilter<"Generation"> | number
  startedAt?: Prisma.DateTimeNullableFilter<"Generation"> | Date | string | null
  completedAt?: Prisma.DateTimeNullableFilter<"Generation"> | Date | string | null
  errorMsg?: Prisma.StringNullableFilter<"Generation"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Generation"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Generation"> | Date | string
  project?: Prisma.XOR<Prisma.ProjectScalarRelationFilter, Prisma.ProjectWhereInput>
  steps?: Prisma.GenerationStepListRelationFilter
}, "id">

export type GenerationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  projectId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  currentStep?: Prisma.SortOrderInput | Prisma.SortOrder
  totalSteps?: Prisma.SortOrder
  startedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  completedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  errorMsg?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.GenerationCountOrderByAggregateInput
  _avg?: Prisma.GenerationAvgOrderByAggregateInput
  _max?: Prisma.GenerationMaxOrderByAggregateInput
  _min?: Prisma.GenerationMinOrderByAggregateInput
  _sum?: Prisma.GenerationSumOrderByAggregateInput
}

export type GenerationScalarWhereWithAggregatesInput = {
  AND?: Prisma.GenerationScalarWhereWithAggregatesInput | Prisma.GenerationScalarWhereWithAggregatesInput[]
  OR?: Prisma.GenerationScalarWhereWithAggregatesInput[]
  NOT?: Prisma.GenerationScalarWhereWithAggregatesInput | Prisma.GenerationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Generation"> | string
  projectId?: Prisma.StringWithAggregatesFilter<"Generation"> | string
  status?: Prisma.EnumGenerationStatusWithAggregatesFilter<"Generation"> | $Enums.GenerationStatus
  progress?: Prisma.IntWithAggregatesFilter<"Generation"> | number
  currentStep?: Prisma.StringNullableWithAggregatesFilter<"Generation"> | string | null
  totalSteps?: Prisma.IntWithAggregatesFilter<"Generation"> | number
  startedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Generation"> | Date | string | null
  completedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Generation"> | Date | string | null
  errorMsg?: Prisma.StringNullableWithAggregatesFilter<"Generation"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Generation"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Generation"> | Date | string
}

export type GenerationCreateInput = {
  id?: string
  status?: $Enums.GenerationStatus
  progress?: number
  currentStep?: string | null
  totalSteps?: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  project: Prisma.ProjectCreateNestedOneWithoutGenerationsInput
  steps?: Prisma.GenerationStepCreateNestedManyWithoutGenerationInput
}

export type GenerationUncheckedCreateInput = {
  id?: string
  projectId: string
  status?: $Enums.GenerationStatus
  progress?: number
  currentStep?: string | null
  totalSteps?: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  steps?: Prisma.GenerationStepUncheckedCreateNestedManyWithoutGenerationInput
}

export type GenerationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumGenerationStatusFieldUpdateOperationsInput | $Enums.GenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  currentStep?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalSteps?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  project?: Prisma.ProjectUpdateOneRequiredWithoutGenerationsNestedInput
  steps?: Prisma.GenerationStepUpdateManyWithoutGenerationNestedInput
}

export type GenerationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  projectId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumGenerationStatusFieldUpdateOperationsInput | $Enums.GenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  currentStep?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalSteps?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  steps?: Prisma.GenerationStepUncheckedUpdateManyWithoutGenerationNestedInput
}

export type GenerationCreateManyInput = {
  id?: string
  projectId: string
  status?: $Enums.GenerationStatus
  progress?: number
  currentStep?: string | null
  totalSteps?: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type GenerationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumGenerationStatusFieldUpdateOperationsInput | $Enums.GenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  currentStep?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalSteps?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GenerationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  projectId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumGenerationStatusFieldUpdateOperationsInput | $Enums.GenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  currentStep?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalSteps?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GenerationListRelationFilter = {
  every?: Prisma.GenerationWhereInput
  some?: Prisma.GenerationWhereInput
  none?: Prisma.GenerationWhereInput
}

export type GenerationOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type GenerationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  projectId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  currentStep?: Prisma.SortOrder
  totalSteps?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  completedAt?: Prisma.SortOrder
  errorMsg?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type GenerationAvgOrderByAggregateInput = {
  progress?: Prisma.SortOrder
  totalSteps?: Prisma.SortOrder
}

export type GenerationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  projectId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  currentStep?: Prisma.SortOrder
  totalSteps?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  completedAt?: Prisma.SortOrder
  errorMsg?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type GenerationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  projectId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  currentStep?: Prisma.SortOrder
  totalSteps?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  completedAt?: Prisma.SortOrder
  errorMsg?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type GenerationSumOrderByAggregateInput = {
  progress?: Prisma.SortOrder
  totalSteps?: Prisma.SortOrder
}

export type GenerationScalarRelationFilter = {
  is?: Prisma.GenerationWhereInput
  isNot?: Prisma.GenerationWhereInput
}

export type GenerationCreateNestedManyWithoutProjectInput = {
  create?: Prisma.XOR<Prisma.GenerationCreateWithoutProjectInput, Prisma.GenerationUncheckedCreateWithoutProjectInput> | Prisma.GenerationCreateWithoutProjectInput[] | Prisma.GenerationUncheckedCreateWithoutProjectInput[]
  connectOrCreate?: Prisma.GenerationCreateOrConnectWithoutProjectInput | Prisma.GenerationCreateOrConnectWithoutProjectInput[]
  createMany?: Prisma.GenerationCreateManyProjectInputEnvelope
  connect?: Prisma.GenerationWhereUniqueInput | Prisma.GenerationWhereUniqueInput[]
}

export type GenerationUncheckedCreateNestedManyWithoutProjectInput = {
  create?: Prisma.XOR<Prisma.GenerationCreateWithoutProjectInput, Prisma.GenerationUncheckedCreateWithoutProjectInput> | Prisma.GenerationCreateWithoutProjectInput[] | Prisma.GenerationUncheckedCreateWithoutProjectInput[]
  connectOrCreate?: Prisma.GenerationCreateOrConnectWithoutProjectInput | Prisma.GenerationCreateOrConnectWithoutProjectInput[]
  createMany?: Prisma.GenerationCreateManyProjectInputEnvelope
  connect?: Prisma.GenerationWhereUniqueInput | Prisma.GenerationWhereUniqueInput[]
}

export type GenerationUpdateManyWithoutProjectNestedInput = {
  create?: Prisma.XOR<Prisma.GenerationCreateWithoutProjectInput, Prisma.GenerationUncheckedCreateWithoutProjectInput> | Prisma.GenerationCreateWithoutProjectInput[] | Prisma.GenerationUncheckedCreateWithoutProjectInput[]
  connectOrCreate?: Prisma.GenerationCreateOrConnectWithoutProjectInput | Prisma.GenerationCreateOrConnectWithoutProjectInput[]
  upsert?: Prisma.GenerationUpsertWithWhereUniqueWithoutProjectInput | Prisma.GenerationUpsertWithWhereUniqueWithoutProjectInput[]
  createMany?: Prisma.GenerationCreateManyProjectInputEnvelope
  set?: Prisma.GenerationWhereUniqueInput | Prisma.GenerationWhereUniqueInput[]
  disconnect?: Prisma.GenerationWhereUniqueInput | Prisma.GenerationWhereUniqueInput[]
  delete?: Prisma.GenerationWhereUniqueInput | Prisma.GenerationWhereUniqueInput[]
  connect?: Prisma.GenerationWhereUniqueInput | Prisma.GenerationWhereUniqueInput[]
  update?: Prisma.GenerationUpdateWithWhereUniqueWithoutProjectInput | Prisma.GenerationUpdateWithWhereUniqueWithoutProjectInput[]
  updateMany?: Prisma.GenerationUpdateManyWithWhereWithoutProjectInput | Prisma.GenerationUpdateManyWithWhereWithoutProjectInput[]
  deleteMany?: Prisma.GenerationScalarWhereInput | Prisma.GenerationScalarWhereInput[]
}

export type GenerationUncheckedUpdateManyWithoutProjectNestedInput = {
  create?: Prisma.XOR<Prisma.GenerationCreateWithoutProjectInput, Prisma.GenerationUncheckedCreateWithoutProjectInput> | Prisma.GenerationCreateWithoutProjectInput[] | Prisma.GenerationUncheckedCreateWithoutProjectInput[]
  connectOrCreate?: Prisma.GenerationCreateOrConnectWithoutProjectInput | Prisma.GenerationCreateOrConnectWithoutProjectInput[]
  upsert?: Prisma.GenerationUpsertWithWhereUniqueWithoutProjectInput | Prisma.GenerationUpsertWithWhereUniqueWithoutProjectInput[]
  createMany?: Prisma.GenerationCreateManyProjectInputEnvelope
  set?: Prisma.GenerationWhereUniqueInput | Prisma.GenerationWhereUniqueInput[]
  disconnect?: Prisma.GenerationWhereUniqueInput | Prisma.GenerationWhereUniqueInput[]
  delete?: Prisma.GenerationWhereUniqueInput | Prisma.GenerationWhereUniqueInput[]
  connect?: Prisma.GenerationWhereUniqueInput | Prisma.GenerationWhereUniqueInput[]
  update?: Prisma.GenerationUpdateWithWhereUniqueWithoutProjectInput | Prisma.GenerationUpdateWithWhereUniqueWithoutProjectInput[]
  updateMany?: Prisma.GenerationUpdateManyWithWhereWithoutProjectInput | Prisma.GenerationUpdateManyWithWhereWithoutProjectInput[]
  deleteMany?: Prisma.GenerationScalarWhereInput | Prisma.GenerationScalarWhereInput[]
}

export type EnumGenerationStatusFieldUpdateOperationsInput = {
  set?: $Enums.GenerationStatus
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type GenerationCreateNestedOneWithoutStepsInput = {
  create?: Prisma.XOR<Prisma.GenerationCreateWithoutStepsInput, Prisma.GenerationUncheckedCreateWithoutStepsInput>
  connectOrCreate?: Prisma.GenerationCreateOrConnectWithoutStepsInput
  connect?: Prisma.GenerationWhereUniqueInput
}

export type GenerationUpdateOneRequiredWithoutStepsNestedInput = {
  create?: Prisma.XOR<Prisma.GenerationCreateWithoutStepsInput, Prisma.GenerationUncheckedCreateWithoutStepsInput>
  connectOrCreate?: Prisma.GenerationCreateOrConnectWithoutStepsInput
  upsert?: Prisma.GenerationUpsertWithoutStepsInput
  connect?: Prisma.GenerationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.GenerationUpdateToOneWithWhereWithoutStepsInput, Prisma.GenerationUpdateWithoutStepsInput>, Prisma.GenerationUncheckedUpdateWithoutStepsInput>
}

export type GenerationCreateWithoutProjectInput = {
  id?: string
  status?: $Enums.GenerationStatus
  progress?: number
  currentStep?: string | null
  totalSteps?: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  steps?: Prisma.GenerationStepCreateNestedManyWithoutGenerationInput
}

export type GenerationUncheckedCreateWithoutProjectInput = {
  id?: string
  status?: $Enums.GenerationStatus
  progress?: number
  currentStep?: string | null
  totalSteps?: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  steps?: Prisma.GenerationStepUncheckedCreateNestedManyWithoutGenerationInput
}

export type GenerationCreateOrConnectWithoutProjectInput = {
  where: Prisma.GenerationWhereUniqueInput
  create: Prisma.XOR<Prisma.GenerationCreateWithoutProjectInput, Prisma.GenerationUncheckedCreateWithoutProjectInput>
}

export type GenerationCreateManyProjectInputEnvelope = {
  data: Prisma.GenerationCreateManyProjectInput | Prisma.GenerationCreateManyProjectInput[]
  skipDuplicates?: boolean
}

export type GenerationUpsertWithWhereUniqueWithoutProjectInput = {
  where: Prisma.GenerationWhereUniqueInput
  update: Prisma.XOR<Prisma.GenerationUpdateWithoutProjectInput, Prisma.GenerationUncheckedUpdateWithoutProjectInput>
  create: Prisma.XOR<Prisma.GenerationCreateWithoutProjectInput, Prisma.GenerationUncheckedCreateWithoutProjectInput>
}

export type GenerationUpdateWithWhereUniqueWithoutProjectInput = {
  where: Prisma.GenerationWhereUniqueInput
  data: Prisma.XOR<Prisma.GenerationUpdateWithoutProjectInput, Prisma.GenerationUncheckedUpdateWithoutProjectInput>
}

export type GenerationUpdateManyWithWhereWithoutProjectInput = {
  where: Prisma.GenerationScalarWhereInput
  data: Prisma.XOR<Prisma.GenerationUpdateManyMutationInput, Prisma.GenerationUncheckedUpdateManyWithoutProjectInput>
}

export type GenerationScalarWhereInput = {
  AND?: Prisma.GenerationScalarWhereInput | Prisma.GenerationScalarWhereInput[]
  OR?: Prisma.GenerationScalarWhereInput[]
  NOT?: Prisma.GenerationScalarWhereInput | Prisma.GenerationScalarWhereInput[]
  id?: Prisma.StringFilter<"Generation"> | string
  projectId?: Prisma.StringFilter<"Generation"> | string
  status?: Prisma.EnumGenerationStatusFilter<"Generation"> | $Enums.GenerationStatus
  progress?: Prisma.IntFilter<"Generation"> | number
  currentStep?: Prisma.StringNullableFilter<"Generation"> | string | null
  totalSteps?: Prisma.IntFilter<"Generation"> | number
  startedAt?: Prisma.DateTimeNullableFilter<"Generation"> | Date | string | null
  completedAt?: Prisma.DateTimeNullableFilter<"Generation"> | Date | string | null
  errorMsg?: Prisma.StringNullableFilter<"Generation"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Generation"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Generation"> | Date | string
}

export type GenerationCreateWithoutStepsInput = {
  id?: string
  status?: $Enums.GenerationStatus
  progress?: number
  currentStep?: string | null
  totalSteps?: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  project: Prisma.ProjectCreateNestedOneWithoutGenerationsInput
}

export type GenerationUncheckedCreateWithoutStepsInput = {
  id?: string
  projectId: string
  status?: $Enums.GenerationStatus
  progress?: number
  currentStep?: string | null
  totalSteps?: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type GenerationCreateOrConnectWithoutStepsInput = {
  where: Prisma.GenerationWhereUniqueInput
  create: Prisma.XOR<Prisma.GenerationCreateWithoutStepsInput, Prisma.GenerationUncheckedCreateWithoutStepsInput>
}

export type GenerationUpsertWithoutStepsInput = {
  update: Prisma.XOR<Prisma.GenerationUpdateWithoutStepsInput, Prisma.GenerationUncheckedUpdateWithoutStepsInput>
  create: Prisma.XOR<Prisma.GenerationCreateWithoutStepsInput, Prisma.GenerationUncheckedCreateWithoutStepsInput>
  where?: Prisma.GenerationWhereInput
}

export type GenerationUpdateToOneWithWhereWithoutStepsInput = {
  where?: Prisma.GenerationWhereInput
  data: Prisma.XOR<Prisma.GenerationUpdateWithoutStepsInput, Prisma.GenerationUncheckedUpdateWithoutStepsInput>
}

export type GenerationUpdateWithoutStepsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumGenerationStatusFieldUpdateOperationsInput | $Enums.GenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  currentStep?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalSteps?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  project?: Prisma.ProjectUpdateOneRequiredWithoutGenerationsNestedInput
}

export type GenerationUncheckedUpdateWithoutStepsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  projectId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumGenerationStatusFieldUpdateOperationsInput | $Enums.GenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  currentStep?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalSteps?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GenerationCreateManyProjectInput = {
  id?: string
  status?: $Enums.GenerationStatus
  progress?: number
  currentStep?: string | null
  totalSteps?: number
  startedAt?: Date | string | null
  completedAt?: Date | string | null
  errorMsg?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type GenerationUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumGenerationStatusFieldUpdateOperationsInput | $Enums.GenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  currentStep?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalSteps?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  steps?: Prisma.GenerationStepUpdateManyWithoutGenerationNestedInput
}

export type GenerationUncheckedUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumGenerationStatusFieldUpdateOperationsInput | $Enums.GenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  currentStep?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalSteps?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  steps?: Prisma.GenerationStepUncheckedUpdateManyWithoutGenerationNestedInput
}

export type GenerationUncheckedUpdateManyWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumGenerationStatusFieldUpdateOperationsInput | $Enums.GenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  currentStep?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalSteps?: Prisma.IntFieldUpdateOperationsInput | number
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  completedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorMsg?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type GenerationCountOutputType
 */

export type GenerationCountOutputType = {
  steps: number
}

export type GenerationCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  steps?: boolean | GenerationCountOutputTypeCountStepsArgs
}

/**
 * GenerationCountOutputType without action
 */
export type GenerationCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationCountOutputType
   */
  select?: Prisma.GenerationCountOutputTypeSelect<ExtArgs> | null
}

/**
 * GenerationCountOutputType without action
 */
export type GenerationCountOutputTypeCountStepsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GenerationStepWhereInput
}


export type GenerationSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  projectId?: boolean
  status?: boolean
  progress?: boolean
  currentStep?: boolean
  totalSteps?: boolean
  startedAt?: boolean
  completedAt?: boolean
  errorMsg?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
  steps?: boolean | Prisma.Generation$stepsArgs<ExtArgs>
  _count?: boolean | Prisma.GenerationCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["generation"]>

export type GenerationSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  projectId?: boolean
  status?: boolean
  progress?: boolean
  currentStep?: boolean
  totalSteps?: boolean
  startedAt?: boolean
  completedAt?: boolean
  errorMsg?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
}, ExtArgs["result"]["generation"]>

export type GenerationSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  projectId?: boolean
  status?: boolean
  progress?: boolean
  currentStep?: boolean
  totalSteps?: boolean
  startedAt?: boolean
  completedAt?: boolean
  errorMsg?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
}, ExtArgs["result"]["generation"]>

export type GenerationSelectScalar = {
  id?: boolean
  projectId?: boolean
  status?: boolean
  progress?: boolean
  currentStep?: boolean
  totalSteps?: boolean
  startedAt?: boolean
  completedAt?: boolean
  errorMsg?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type GenerationOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "projectId" | "status" | "progress" | "currentStep" | "totalSteps" | "startedAt" | "completedAt" | "errorMsg" | "createdAt" | "updatedAt", ExtArgs["result"]["generation"]>
export type GenerationInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
  steps?: boolean | Prisma.Generation$stepsArgs<ExtArgs>
  _count?: boolean | Prisma.GenerationCountOutputTypeDefaultArgs<ExtArgs>
}
export type GenerationIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
}
export type GenerationIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
}

export type $GenerationPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Generation"
  objects: {
    project: Prisma.$ProjectPayload<ExtArgs>
    steps: Prisma.$GenerationStepPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    projectId: string
    status: $Enums.GenerationStatus
    progress: number
    currentStep: string | null
    totalSteps: number
    startedAt: Date | null
    completedAt: Date | null
    errorMsg: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["generation"]>
  composites: {}
}

export type GenerationGetPayload<S extends boolean | null | undefined | GenerationDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$GenerationPayload, S>

export type GenerationCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<GenerationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: GenerationCountAggregateInputType | true
  }

export interface GenerationDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Generation'], meta: { name: 'Generation' } }
  /**
   * Find zero or one Generation that matches the filter.
   * @param {GenerationFindUniqueArgs} args - Arguments to find a Generation
   * @example
   * // Get one Generation
   * const generation = await prisma.generation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends GenerationFindUniqueArgs>(args: Prisma.SelectSubset<T, GenerationFindUniqueArgs<ExtArgs>>): Prisma.Prisma__GenerationClient<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Generation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {GenerationFindUniqueOrThrowArgs} args - Arguments to find a Generation
   * @example
   * // Get one Generation
   * const generation = await prisma.generation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends GenerationFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, GenerationFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__GenerationClient<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Generation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationFindFirstArgs} args - Arguments to find a Generation
   * @example
   * // Get one Generation
   * const generation = await prisma.generation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends GenerationFindFirstArgs>(args?: Prisma.SelectSubset<T, GenerationFindFirstArgs<ExtArgs>>): Prisma.Prisma__GenerationClient<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Generation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationFindFirstOrThrowArgs} args - Arguments to find a Generation
   * @example
   * // Get one Generation
   * const generation = await prisma.generation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends GenerationFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, GenerationFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__GenerationClient<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Generations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Generations
   * const generations = await prisma.generation.findMany()
   * 
   * // Get first 10 Generations
   * const generations = await prisma.generation.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const generationWithIdOnly = await prisma.generation.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends GenerationFindManyArgs>(args?: Prisma.SelectSubset<T, GenerationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Generation.
   * @param {GenerationCreateArgs} args - Arguments to create a Generation.
   * @example
   * // Create one Generation
   * const Generation = await prisma.generation.create({
   *   data: {
   *     // ... data to create a Generation
   *   }
   * })
   * 
   */
  create<T extends GenerationCreateArgs>(args: Prisma.SelectSubset<T, GenerationCreateArgs<ExtArgs>>): Prisma.Prisma__GenerationClient<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Generations.
   * @param {GenerationCreateManyArgs} args - Arguments to create many Generations.
   * @example
   * // Create many Generations
   * const generation = await prisma.generation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends GenerationCreateManyArgs>(args?: Prisma.SelectSubset<T, GenerationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Generations and returns the data saved in the database.
   * @param {GenerationCreateManyAndReturnArgs} args - Arguments to create many Generations.
   * @example
   * // Create many Generations
   * const generation = await prisma.generation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Generations and only return the `id`
   * const generationWithIdOnly = await prisma.generation.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends GenerationCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, GenerationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Generation.
   * @param {GenerationDeleteArgs} args - Arguments to delete one Generation.
   * @example
   * // Delete one Generation
   * const Generation = await prisma.generation.delete({
   *   where: {
   *     // ... filter to delete one Generation
   *   }
   * })
   * 
   */
  delete<T extends GenerationDeleteArgs>(args: Prisma.SelectSubset<T, GenerationDeleteArgs<ExtArgs>>): Prisma.Prisma__GenerationClient<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Generation.
   * @param {GenerationUpdateArgs} args - Arguments to update one Generation.
   * @example
   * // Update one Generation
   * const generation = await prisma.generation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends GenerationUpdateArgs>(args: Prisma.SelectSubset<T, GenerationUpdateArgs<ExtArgs>>): Prisma.Prisma__GenerationClient<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Generations.
   * @param {GenerationDeleteManyArgs} args - Arguments to filter Generations to delete.
   * @example
   * // Delete a few Generations
   * const { count } = await prisma.generation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends GenerationDeleteManyArgs>(args?: Prisma.SelectSubset<T, GenerationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Generations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Generations
   * const generation = await prisma.generation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends GenerationUpdateManyArgs>(args: Prisma.SelectSubset<T, GenerationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Generations and returns the data updated in the database.
   * @param {GenerationUpdateManyAndReturnArgs} args - Arguments to update many Generations.
   * @example
   * // Update many Generations
   * const generation = await prisma.generation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Generations and only return the `id`
   * const generationWithIdOnly = await prisma.generation.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends GenerationUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, GenerationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Generation.
   * @param {GenerationUpsertArgs} args - Arguments to update or create a Generation.
   * @example
   * // Update or create a Generation
   * const generation = await prisma.generation.upsert({
   *   create: {
   *     // ... data to create a Generation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Generation we want to update
   *   }
   * })
   */
  upsert<T extends GenerationUpsertArgs>(args: Prisma.SelectSubset<T, GenerationUpsertArgs<ExtArgs>>): Prisma.Prisma__GenerationClient<runtime.Types.Result.GetResult<Prisma.$GenerationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Generations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationCountArgs} args - Arguments to filter Generations to count.
   * @example
   * // Count the number of Generations
   * const count = await prisma.generation.count({
   *   where: {
   *     // ... the filter for the Generations we want to count
   *   }
   * })
  **/
  count<T extends GenerationCountArgs>(
    args?: Prisma.Subset<T, GenerationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], GenerationCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Generation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends GenerationAggregateArgs>(args: Prisma.Subset<T, GenerationAggregateArgs>): Prisma.PrismaPromise<GetGenerationAggregateType<T>>

  /**
   * Group by Generation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GenerationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends GenerationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: GenerationGroupByArgs['orderBy'] }
      : { orderBy?: GenerationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, GenerationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGenerationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Generation model
 */
readonly fields: GenerationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Generation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__GenerationClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  project<T extends Prisma.ProjectDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProjectDefaultArgs<ExtArgs>>): Prisma.Prisma__ProjectClient<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  steps<T extends Prisma.Generation$stepsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Generation$stepsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GenerationStepPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Generation model
 */
export interface GenerationFieldRefs {
  readonly id: Prisma.FieldRef<"Generation", 'String'>
  readonly projectId: Prisma.FieldRef<"Generation", 'String'>
  readonly status: Prisma.FieldRef<"Generation", 'GenerationStatus'>
  readonly progress: Prisma.FieldRef<"Generation", 'Int'>
  readonly currentStep: Prisma.FieldRef<"Generation", 'String'>
  readonly totalSteps: Prisma.FieldRef<"Generation", 'Int'>
  readonly startedAt: Prisma.FieldRef<"Generation", 'DateTime'>
  readonly completedAt: Prisma.FieldRef<"Generation", 'DateTime'>
  readonly errorMsg: Prisma.FieldRef<"Generation", 'String'>
  readonly createdAt: Prisma.FieldRef<"Generation", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Generation", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Generation findUnique
 */
export type GenerationFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationInclude<ExtArgs> | null
  /**
   * Filter, which Generation to fetch.
   */
  where: Prisma.GenerationWhereUniqueInput
}

/**
 * Generation findUniqueOrThrow
 */
export type GenerationFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationInclude<ExtArgs> | null
  /**
   * Filter, which Generation to fetch.
   */
  where: Prisma.GenerationWhereUniqueInput
}

/**
 * Generation findFirst
 */
export type GenerationFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationInclude<ExtArgs> | null
  /**
   * Filter, which Generation to fetch.
   */
  where?: Prisma.GenerationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Generations to fetch.
   */
  orderBy?: Prisma.GenerationOrderByWithRelationInput | Prisma.GenerationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Generations.
   */
  cursor?: Prisma.GenerationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Generations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Generations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Generations.
   */
  distinct?: Prisma.GenerationScalarFieldEnum | Prisma.GenerationScalarFieldEnum[]
}

/**
 * Generation findFirstOrThrow
 */
export type GenerationFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationInclude<ExtArgs> | null
  /**
   * Filter, which Generation to fetch.
   */
  where?: Prisma.GenerationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Generations to fetch.
   */
  orderBy?: Prisma.GenerationOrderByWithRelationInput | Prisma.GenerationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Generations.
   */
  cursor?: Prisma.GenerationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Generations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Generations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Generations.
   */
  distinct?: Prisma.GenerationScalarFieldEnum | Prisma.GenerationScalarFieldEnum[]
}

/**
 * Generation findMany
 */
export type GenerationFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationInclude<ExtArgs> | null
  /**
   * Filter, which Generations to fetch.
   */
  where?: Prisma.GenerationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Generations to fetch.
   */
  orderBy?: Prisma.GenerationOrderByWithRelationInput | Prisma.GenerationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Generations.
   */
  cursor?: Prisma.GenerationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Generations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Generations.
   */
  skip?: number
  distinct?: Prisma.GenerationScalarFieldEnum | Prisma.GenerationScalarFieldEnum[]
}

/**
 * Generation create
 */
export type GenerationCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationInclude<ExtArgs> | null
  /**
   * The data needed to create a Generation.
   */
  data: Prisma.XOR<Prisma.GenerationCreateInput, Prisma.GenerationUncheckedCreateInput>
}

/**
 * Generation createMany
 */
export type GenerationCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Generations.
   */
  data: Prisma.GenerationCreateManyInput | Prisma.GenerationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Generation createManyAndReturn
 */
export type GenerationCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * The data used to create many Generations.
   */
  data: Prisma.GenerationCreateManyInput | Prisma.GenerationCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Generation update
 */
export type GenerationUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationInclude<ExtArgs> | null
  /**
   * The data needed to update a Generation.
   */
  data: Prisma.XOR<Prisma.GenerationUpdateInput, Prisma.GenerationUncheckedUpdateInput>
  /**
   * Choose, which Generation to update.
   */
  where: Prisma.GenerationWhereUniqueInput
}

/**
 * Generation updateMany
 */
export type GenerationUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Generations.
   */
  data: Prisma.XOR<Prisma.GenerationUpdateManyMutationInput, Prisma.GenerationUncheckedUpdateManyInput>
  /**
   * Filter which Generations to update
   */
  where?: Prisma.GenerationWhereInput
  /**
   * Limit how many Generations to update.
   */
  limit?: number
}

/**
 * Generation updateManyAndReturn
 */
export type GenerationUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * The data used to update Generations.
   */
  data: Prisma.XOR<Prisma.GenerationUpdateManyMutationInput, Prisma.GenerationUncheckedUpdateManyInput>
  /**
   * Filter which Generations to update
   */
  where?: Prisma.GenerationWhereInput
  /**
   * Limit how many Generations to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Generation upsert
 */
export type GenerationUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationInclude<ExtArgs> | null
  /**
   * The filter to search for the Generation to update in case it exists.
   */
  where: Prisma.GenerationWhereUniqueInput
  /**
   * In case the Generation found by the `where` argument doesn't exist, create a new Generation with this data.
   */
  create: Prisma.XOR<Prisma.GenerationCreateInput, Prisma.GenerationUncheckedCreateInput>
  /**
   * In case the Generation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.GenerationUpdateInput, Prisma.GenerationUncheckedUpdateInput>
}

/**
 * Generation delete
 */
export type GenerationDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationInclude<ExtArgs> | null
  /**
   * Filter which Generation to delete.
   */
  where: Prisma.GenerationWhereUniqueInput
}

/**
 * Generation deleteMany
 */
export type GenerationDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Generations to delete
   */
  where?: Prisma.GenerationWhereInput
  /**
   * Limit how many Generations to delete.
   */
  limit?: number
}

/**
 * Generation.steps
 */
export type Generation$stepsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GenerationStep
   */
  select?: Prisma.GenerationStepSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GenerationStep
   */
  omit?: Prisma.GenerationStepOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationStepInclude<ExtArgs> | null
  where?: Prisma.GenerationStepWhereInput
  orderBy?: Prisma.GenerationStepOrderByWithRelationInput | Prisma.GenerationStepOrderByWithRelationInput[]
  cursor?: Prisma.GenerationStepWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.GenerationStepScalarFieldEnum | Prisma.GenerationStepScalarFieldEnum[]
}

/**
 * Generation without action
 */
export type GenerationDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Generation
   */
  select?: Prisma.GenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Generation
   */
  omit?: Prisma.GenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenerationInclude<ExtArgs> | null
}
